{"version":3,"sources":["App.module.css","components/UI/BigCard.module.css","components/ToggleSwitch.module.css","components/UI/TodayStatus.module.css","components/UI/SmallCard.module.css","components/UI/ThemeContext.js","components/ToggleSwitch.js","components/UI/images/icon-facebook.svg","components/UI/images/icon-instagram.svg","components/UI/images/icon-twitter.svg","components/UI/images/icon-youtube.svg","components/UI/SocmedIcon.js","components/UI/images/icon-up.svg","components/UI/images/icon-down.svg","components/UI/TodayStatus.js","components/UI/BigCard.js","components/UI/SmallCard.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ThemeContext","React","createContext","theme","ToggleSwitch","props","useContext","className","classes","toggle","toggleLabel","switch","type","onChange","onChangeTheme","slider","SocmedIcon","icon","altIcon","platformName","fbIcon","instagramIcon","twitterIcon","youtubeIcon","src","alt","TodayStatus","todayStyle","status","upIcon","up","downIcon","down","today","statusIcon","count","unit","BigCard","console","log","formattedCount","bigCard","cardTitle","account","countNum","countString","string","todayStatus","SmallCard","smallCard","App","useState","data","setData","isLoading","setIsLoading","httpError","setIsHttpError","setTheme","useEffect","fetchData","a","fetch","response","ok","Error","json","key","responseData","platforms","push","id","platform","followers","today_status","param1","param2","socmedData","totalFollowers","total_followers","catch","error","platformList","map","platformStatList","Provider","value","pseudoBody","class","topBg","appContainer","title","totalCount","toLocaleString","useGrouping","borderTop","bigCardContainer","overviewToday","smallCardContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bb15e8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pseudoBody\":\"App_pseudoBody__2E3vT\",\"appContainer\":\"App_appContainer__2CBGU\",\"topBg\":\"App_topBg__25D5k\",\"title\":\"App_title__2VgQl\",\"overviewToday\":\"App_overviewToday__NKjbX\",\"borderTop\":\"App_borderTop__1BsrY\",\"bigCardContainer\":\"App_bigCardContainer__1uKTt\",\"smallCardContainer\":\"App_smallCardContainer__1Qb3Y\",\"totalCount\":\"App_totalCount__3Gucj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bigCard\":\"BigCard_bigCard__3GvRw\",\"cardTitle\":\"BigCard_cardTitle__k0Wui\",\"count\":\"BigCard_count__1Mv9S\",\"countNum\":\"BigCard_countNum__2B0vv\",\"countString\":\"BigCard_countString__1AOUn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle\":\"ToggleSwitch_toggle__NWrn_\",\"toggleLabel\":\"ToggleSwitch_toggleLabel__1gv8P\",\"switch\":\"ToggleSwitch_switch__3AEbp\",\"slider\":\"ToggleSwitch_slider__2zrFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"today\":\"TodayStatus_today__R2wok\",\"up\":\"TodayStatus_up__2dAv8\",\"down\":\"TodayStatus_down__WGGOW\",\"statusIcon\":\"TodayStatus_statusIcon__38zIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallCard\":\"SmallCard_smallCard__6EnQI\",\"string\":\"SmallCard_string__6m2oS\",\"icon\":\"SmallCard_icon__PyVYw\",\"count\":\"SmallCard_count__1k-n0\"};","import React from \"react\";\r\n\r\nconst ThemeContext = React.createContext({theme: \"dark\"});\r\n\r\nexport default ThemeContext;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport classes from \"./ToggleSwitch.module.css\";\r\nimport ThemeContext from \"./UI/ThemeContext\";\r\n\r\nconst ToggleSwitch = (props) => {\r\n  const theme = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div className={classes.toggle}>\r\n      <span className={classes.toggleLabel}>{theme} Mode</span>\r\n      <label className={`${theme} ${classes.switch}`}>\r\n        <input type=\"checkbox\" onChange={props.onChangeTheme} />\r\n        <span className={`${theme} ${classes.slider}`}></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleSwitch;\r\n","export default __webpack_public_path__ + \"static/media/icon-facebook.8deee3e3.svg\";","export default __webpack_public_path__ + \"static/media/icon-instagram.568b5795.svg\";","export default __webpack_public_path__ + \"static/media/icon-twitter.a0c5f64d.svg\";","export default __webpack_public_path__ + \"static/media/icon-youtube.cad14335.svg\";","import React from \"react\";\r\n\r\nimport fbIcon from \"./images/icon-facebook.svg\";\r\nimport instagramIcon from \"./images/icon-instagram.svg\";\r\nimport twitterIcon from \"./images/icon-twitter.svg\";\r\nimport youtubeIcon from \"./images/icon-youtube.svg\";\r\n\r\nconst SocmedIcon = (props) => {\r\n  let icon = \"\";\r\n  let altIcon = \"\";\r\n  if (props.platformName === \"facebook\") {\r\n    icon = fbIcon;\r\n    altIcon = \"Facebook\";\r\n  } else if (props.platformName === \"instagram\") {\r\n    icon = instagramIcon;\r\n    altIcon = \"Instagram\";\r\n  } else if (props.platformName === \"twitter\") {\r\n    icon = twitterIcon;\r\n    altIcon = \"Twitter\";\r\n  } else {\r\n    icon = youtubeIcon;\r\n    altIcon = \"Youtube\";\r\n  }\r\n\r\n  return <img src={icon} alt={altIcon} />;\r\n};\r\n\r\nexport default SocmedIcon;\r\n","export default __webpack_public_path__ + \"static/media/icon-up.359200b2.svg\";","export default __webpack_public_path__ + \"static/media/icon-down.0c77426d.svg\";","import React from \"react\";\r\n\r\nimport upIcon from \"./images/icon-up.svg\";\r\nimport downIcon from \"./images/icon-down.svg\";\r\n\r\nimport classes from \"./TodayStatus.module.css\";\r\n\r\nconst TodayStatus = props => {\r\n\r\n    let icon = \"\";\r\n    let altIcon = \"\";\r\n    let todayStyle = \"\";\r\n    if (props.status === \"up\") {\r\n      icon = upIcon;\r\n      altIcon = \"Up\";\r\n      todayStyle = classes.up;\r\n    } else {\r\n      icon = downIcon;\r\n      altIcon = \"Down\";\r\n      todayStyle = classes.down;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.today}>\r\n            <img className={classes.statusIcon} src={icon} alt={altIcon} />\r\n            <span className={todayStyle}>{props.count} {props.unit}</span>\r\n        </div>\r\n    );\r\n}; \r\n\r\nexport default TodayStatus;","import React from \"react\";\r\nimport { useContext } from \"react/cjs/react.development\";\r\n\r\nimport SocmedIcon from \"./SocmedIcon\";\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\nimport classes from \"./BigCard.module.css\";\r\nimport TodayStatus from \"./TodayStatus\";\r\n\r\nconst BigCard = (props) => {\r\n  let theme = useContext(ThemeContext);\r\n  console.log(\"BigCard theme: \" + theme);\r\n  console.log(\"BigCard props.platformName: \" + props.platformName);\r\n\r\n  // when exceed 10000, format as 2-digit with k suffix\r\n  const formattedCount =\r\n    props.count > 10000 ? `${props.count / 1000}k` : props.count;\r\n\r\n  return (\r\n    <li className={`${theme} ${classes.bigCard} ${props.platformName}`}>\r\n      <div className={`${theme} ${classes.cardTitle}`}>\r\n        <SocmedIcon platformName={props.platformName} />\r\n        <span>{props.account}</span>\r\n      </div>\r\n      <div className={`${theme} ${classes.count}`}>\r\n        <span className={`${theme} ${classes.countNum}`}>{formattedCount}</span>\r\n        <span className={`${theme} ${classes.countString}`}>\r\n          {props.string}\r\n        </span>\r\n      </div>\r\n      <TodayStatus status={props.todayStatus} count={props.today} unit=\"Today\"/>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default BigCard;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport SocmedIcon from \"./SocmedIcon\";\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\nimport classes from \"./SmallCard.module.css\";\r\nimport TodayStatus from \"./TodayStatus\";\r\n\r\nconst SmallCard = (props) => {\r\n  let theme = useContext(ThemeContext);\r\n\r\n  // when exceed 10000, format as 2-digit with k suffix\r\n  const formattedCount =\r\n    props.count > 10000 ? `${props.count / 1000}k` : props.count;\r\n\r\n  return (\r\n    <li className={`${theme} ${classes.smallCard}`}>\r\n      <span className={classes.string}>{props.string}</span>\r\n      <span className={classes.icon}>\r\n        <SocmedIcon platformName={props.platformName} />\r\n      </span>\r\n      <span className={classes.count}>{formattedCount}</span>\r\n      <TodayStatus status={props.todayStatus} count={props.today} unit=\"%\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SmallCard;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport ToggleSwitch from \"./components/ToggleSwitch\";\nimport BigCard from \"./components/UI/BigCard\";\nimport SmallCard from \"./components/UI/SmallCard\";\nimport ThemeContext from \"./components/UI/ThemeContext\";\n\nimport classes from \"./App.module.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setIsHttpError] = useState(null);\n  const [theme, setTheme] = useState(\"dark\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://react-http-a0e15-default-rtdb.asia-southeast1.firebasedatabase.app/socmed_dashboard.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      console.log(\"Response data: \" + responseData);\n\n      // load platforms data into array\n      const platforms = [];\n      console.log(\"Response data: \" + responseData);\n\n      for (const key in responseData.platforms) {\n        console.log(\"key: \" + key);\n        platforms.push({\n          id: key,\n          platform: responseData.platforms[key].platform,\n          account: responseData.platforms[key].account,\n          followers: {\n            count: responseData.platforms[key].followers.count,\n            string: responseData.platforms[key].followers.string,\n            today: responseData.platforms[key].followers.today,\n            today_status: responseData.platforms[key].followers.today_status,\n          },\n          param1: {\n            count: responseData.platforms[key].param1.count,\n            string: responseData.platforms[key].param1.string,\n            today: responseData.platforms[key].param1.today,\n            today_status: responseData.platforms[key].param1.today_status,\n          },\n          param2: {\n            count: responseData.platforms[key].param2.count,\n            string: responseData.platforms[key].param2.string,\n            today: responseData.platforms[key].param2.today,\n            today_status: responseData.platforms[key].param2.today_status,\n          },\n        });\n      }\n\n      // transfer fetch data\n      const socmedData = {\n        totalFollowers: responseData.total_followers,\n        platforms: platforms,\n      };\n      console.log(\"socmedData: \" + socmedData);\n      console.log(socmedData.platforms[0]);\n\n      setData(socmedData);\n      setIsLoading(false);\n    };\n\n    fetchData().catch((error) => {\n      setIsLoading(false);\n      setIsHttpError(error);\n    });\n  }, []);\n\n  // render when still loading\n  if (isLoading) {\n    return (\n      <section>\n        <p>Loading... </p>\n      </section>\n    );\n  }\n\n  // render when error\n  if (httpError) {\n    return (\n      <section>\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n\n  console.log(\"platformList\");\n\n  // populate for big card data\n  const platformList = data.platforms.map((platform) => (\n    <BigCard\n      key={`${platform.id}_3`}\n      id={`${platform.id}_3`}\n      platformName={platform.platform}\n      account={platform.account}\n      count={platform.followers.count}\n      string={platform.followers.string}\n      today={platform.followers.today}\n      todayStatus={platform.followers.today_status}\n    />\n  ));\n\n  console.log(\"PlatformStatList\");\n\n  const platformStatList = data.platforms.map((platform) => (\n    <Fragment>\n      <SmallCard\n        key={`${platform.id}_1`}\n        id={`${platform.id}_1`}\n        platformName={platform.platform}\n        count={platform.param1.count}\n        string={platform.param1.string}\n        today={platform.param1.today}\n        todayStatus={platform.param1.today_status}\n      />\n      <SmallCard\n        key={`${platform.id}_2`}\n        id={`${platform.id}_2`}\n        platformName={platform.platform}\n        count={platform.param2.count}\n        string={platform.param2.string}\n        today={platform.param2.today}\n        todayStatus={platform.param2.today_status}\n      />\n    </Fragment>\n  ));\n\n  const themeChangeHandler = () => {\n    console.log(\"ToggleSwitch onChangeHandler theme: \" + theme);\n    if (theme === \"dark\") {\n      setTheme(\"light\");\n    } else {\n      setTheme(\"dark\");\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <div className={`${theme} ${classes.pseudoBody}`}>\n        <div class={`${theme} ${classes.topBg}`} />\n        <div className={`${theme} ${classes.appContainer}`}>\n          <section id=\"header\">\n            <h1 className={`${theme} ${classes.title}`}>\n              Social Media Dashboard\n            </h1>\n            <span className={`${theme} ${classes.totalCount}`}>\n              Total Followers:{\" \"}\n              {data.totalFollowers.toLocaleString(\"en\", { useGrouping: true })}\n            </span>\n          </section>\n          <section id=\"main-apps\" className={`${theme} ${classes.borderTop}`}>\n            <ToggleSwitch onChangeTheme={themeChangeHandler} />\n            <ul className={`${theme} ${classes.bigCardContainer}`}>\n              {platformList}\n            </ul>\n          </section>\n          <section id=\"today\">\n            <h1 className={`${theme} ${classes.overviewToday}`}>\n              Overview - Today\n            </h1>\n            <ul className={`$(theme) ${classes.smallCardContainer}`}>\n              {platformStatList}\n            </ul>\n          </section>\n        </div>\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}